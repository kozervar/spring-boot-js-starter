buildscript {
    ext {
        springBootVersion = '1.2.5.RELEASE'
        queryDSLversion = '3.6.5'
		springDataRestVersion = '2.3.1.RELEASE'
		lombokVersion = '1.16.4'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.springframework:springloaded:1.2.3.RELEASE'
        classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.4"
        classpath "com.oracle:ojdbc6:11.2.0.3.0"
        classpath 'net.saliman:gradle-properties-plugin:1.4.3'
    }
}


group 'pl.kozervar'
version '0.0.1'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: "com.ewerk.gradle.plugins.querydsl"
apply plugin: 'net.saliman.properties'

sourceCompatibility = 1.8

jar {
    baseName = 'starter'
}


repositories {
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

configurations {
    provided
}

sourceSets {
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
}

idea {
    module {
        scopes.PROVIDED.plus += [configurations.provided]
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

dependencies {
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-data-rest")

    compile("com.fasterxml.jackson.core:jackson-databind")

    compile("com.h2database:h2:1.4.179")

    compile("org.projectlombok:lombok:${lombokVersion}")
    provided("org.projectlombok:lombok:${lombokVersion}")

    compile("com.mysema.querydsl:querydsl-core:${queryDSLversion}")
    compile("com.mysema.querydsl:querydsl-jpa:${queryDSLversion}")
    compile("com.mysema.querydsl:querydsl-apt:${queryDSLversion}:jpa")
    
    compile("com.oracle:ojdbc6:11.2.0.3.0");
    
    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

// Filter properties
processResources {
    filter(org.apache.tools.ant.filters.ReplaceTokens, tokens:project.filterTokens)
}

// Querydsl plugin
querydsl {
    library = "com.mysema.querydsl:querydsl-apt:${queryDSLversion}"
    querydslSourcesDir = "src/main/java"
    jpa = true
    querydslDefault = true
}
